// "Cable_Thick.h" generated by "Obj2Header.exe" [Version 1.9d] Author: L.Norri Fullsail University.
// Data is converted to left-handed coordinate system and UV data is V flipped for Direct3D/Vulkan.
// The companion file "Cable_Thick.h2b" is a binary dump of this format(-padding) for more flexibility.
// Loading *.h2b: read version, sizes, handle strings(max len 260) by reading until null-terminated.
/***********************/
/*  Generator version  */
/***********************/
#ifndef _Cable_Thick_version_
const char Cable_Thick_version[4] = { '0','1','9','d' };
#define _Cable_Thick_version_
#endif
/************************************************/
/*  This section contains the model's size data */
/************************************************/
#ifndef _Cable_Thick_vertexcount_
const unsigned Cable_Thick_vertexcount = 200;
#define _Cable_Thick_vertexcount_
#endif
#ifndef _Cable_Thick_indexcount_
const unsigned Cable_Thick_indexcount = 1152;
#define _Cable_Thick_indexcount_
#endif
#ifndef _Cable_Thick_materialcount_
const unsigned Cable_Thick_materialcount = 1; // can be used for batched draws
#define _Cable_Thick_materialcount_
#endif
#ifndef _Cable_Thick_meshcount_
const unsigned Cable_Thick_meshcount = 1;
#define _Cable_Thick_meshcount_
#endif
/************************************************/
/*  This section contains the raw data to load  */
/************************************************/
#ifndef __OBJ_VEC3__
typedef struct _OBJ_VEC3_
{
	float x,y,z; // 3D Coordinate.
}OBJ_VEC3;
#define __OBJ_VEC3__
#endif
#ifndef __OBJ_VERT__
typedef struct _OBJ_VERT_
{
	OBJ_VEC3 pos; // Left-handed +Z forward coordinate w not provided, assumed to be 1.
	OBJ_VEC3 uvw; // D3D/Vulkan style top left 0,0 coordinate.
	OBJ_VEC3 nrm; // Provided direct from obj file, may or may not be normalized.
}OBJ_VERT;
#define __OBJ_VERT__
#endif
#ifndef _Cable_Thick_vertices_
// Raw Vertex Data follows: Positions, Texture Coordinates and Normals.
const OBJ_VERT Cable_Thick_vertices[200] =
{
	{	{ 0.640290f, 0.388906f, 1.592942f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.116900f, 0.200700f, 0.972700f }	},
	{	{ 0.662303f, 0.448874f, 1.583215f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.121000f, 0.202400f, 0.971800f }	},
	{	{ 0.646257f, 0.453489f, 1.572353f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.750100f, 0.356000f, 0.557300f }	},
	{	{ 0.624307f, 0.393693f, 1.582053f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.744400f, 0.364100f, 0.559800f }	},
	{	{ 0.641639f, 0.452379f, 1.553004f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.935700f, 0.299000f, -0.187400f }	},
	{	{ 0.619715f, 0.392653f, 1.562693f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.931600f, 0.311600f, -0.187500f }	},
	{	{ 0.651150f, 0.446195f, 1.536502f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.571000f, 0.066900f, -0.818200f }	},
	{	{ 0.629199f, 0.386397f, 1.546203f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.566600f, 0.074900f, -0.820600f }	},
	{	{ 0.669223f, 0.438560f, 1.532518f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.127000f, -0.204100f, -0.970700f }	},
	{	{ 0.647208f, 0.378588f, 1.542246f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.131100f, -0.205400f, -0.969900f }	},
	{	{ 0.685270f, 0.433945f, 1.543379f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.752700f, -0.356300f, -0.553600f }	},
	{	{ 0.663192f, 0.373800f, 1.553135f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.752200f, -0.365100f, -0.548600f }	},
	{	{ 0.689888f, 0.435055f, 1.562728f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.935600f, -0.299200f, 0.187500f }	},
	{	{ 0.667783f, 0.374840f, 1.572496f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.931100f, -0.310800f, 0.191200f }	},
	{	{ 0.680377f, 0.441239f, 1.579230f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.574300f, -0.068500f, 0.815800f }	},
	{	{ 0.658299f, 0.381097f, 1.588985f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.572500f, -0.077800f, 0.816200f }	},
	{	{ 0.682206f, 0.507729f, 1.573428f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.120500f, 0.203700f, 0.971600f }	},
	{	{ 0.666099f, 0.512167f, 1.562597f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.755800f, 0.339700f, 0.559800f }	},
	{	{ 0.661454f, 0.510975f, 1.543261f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.943900f, 0.274600f, -0.183300f }	},
	{	{ 0.670986f, 0.504856f, 1.526749f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.577400f, 0.049100f, -0.815000f }	},
	{	{ 0.689117f, 0.497391f, 1.522736f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.126600f, -0.205100f, -0.970500f }	},
	{	{ 0.705224f, 0.492954f, 1.533567f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.758700f, -0.339800f, -0.555800f }	},
	{	{ 0.709869f, 0.494145f, 1.552902f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.943800f, -0.274800f, 0.183800f }	},
	{	{ 0.700337f, 0.500265f, 1.569415f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.580500f, -0.050600f, 0.812700f }	},
	{	{ 0.699876f, 0.564753f, 1.563607f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.119300f, 0.206700f, 0.971100f }	},
	{	{ 0.683711f, 0.569000f, 1.552809f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.760800f, 0.324100f, 0.562300f }	},
	{	{ 0.679036f, 0.567713f, 1.533490f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.951700f, 0.249500f, -0.178900f }	},
	{	{ 0.688584f, 0.561646f, 1.516968f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.584000f, 0.029400f, -0.811200f }	},
	{	{ 0.706769f, 0.554353f, 1.512925f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.125700f, -0.208000f, -0.970000f }	},
	{	{ 0.722934f, 0.550106f, 1.523724f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.764000f, -0.324100f, -0.557900f }	},
	{	{ 0.727609f, 0.551394f, 1.543043f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.951500f, -0.249700f, 0.179900f }	},
	{	{ 0.718060f, 0.557460f, 1.559565f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.587000f, -0.030800f, 0.809000f }	},
	{	{ 0.715194f, 0.619225f, 1.553776f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.117200f, 0.212100f, 0.970200f }	},
	{	{ 0.698970f, 0.623262f, 1.543015f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.765300f, 0.308800f, 0.564800f }	},
	{	{ 0.694261f, 0.621855f, 1.523718f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.959300f, 0.222500f, -0.173900f }	},
	{	{ 0.703822f, 0.615830f, 1.507189f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.591000f, 0.006900f, -0.806600f }	},
	{	{ 0.722056f, 0.608716f, 1.503113f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.124300f, -0.213200f, -0.969100f }	},
	{	{ 0.738281f, 0.604680f, 1.513874f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.769000f, -0.308600f, -0.559800f }	},
	{	{ 0.742990f, 0.606087f, 1.533171f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.958900f, -0.222700f, 0.175600f }	},
	{	{ 0.733429f, 0.612111f, 1.549700f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.593900f, -0.008300f, 0.804500f }	},
	{	{ 0.728040f, 0.670429f, 1.543956f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.113900f, 0.220400f, 0.968700f }	},
	{	{ 0.711754f, 0.674221f, 1.533243f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.769200f, 0.293400f, 0.567600f }	},
	{	{ 0.707008f, 0.672662f, 1.513974f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.966900f, 0.192300f, -0.168000f }	},
	{	{ 0.716576f, 0.666668f, 1.497439f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.598700f, -0.019900f, -0.800700f }	},
	{	{ 0.734859f, 0.659749f, 1.493326f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.122200f, -0.221200f, -0.967500f }	},
	{	{ 0.751145f, 0.655958f, 1.504039f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.773900f, -0.292900f, -0.561600f }	},
	{	{ 0.755891f, 0.657517f, 1.523307f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.966400f, -0.192500f, 0.170500f }	},
	{	{ 0.746323f, 0.663511f, 1.539843f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.601600f, 0.018400f, 0.798600f }	},
	{	{ 0.738292f, 0.717655f, 1.534168f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.109200f, 0.232900f, 0.966400f }	},
	{	{ 0.721942f, 0.721145f, 1.523518f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.772700f, 0.277200f, 0.571000f }	},
	{	{ 0.717152f, 0.719385f, 1.504292f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.974600f, 0.156600f, -0.160400f }	},
	{	{ 0.726724f, 0.713408f, 1.487753f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.607200f, -0.053500f, -0.792700f }	},
	{	{ 0.745056f, 0.706714f, 1.483593f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.119300f, -0.233400f, -0.965000f }	},
	{	{ 0.761406f, 0.703224f, 1.494243f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.778800f, -0.276000f, -0.563400f }	},
	{	{ 0.766196f, 0.704984f, 1.513469f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.973900f, -0.156700f, 0.164200f }	},
	{	{ 0.756624f, 0.710961f, 1.530008f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.610300f, 0.051700f, 0.790500f }	},
	{	{ 0.745831f, 0.760202f, 1.524429f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.102300f, 0.251900f, 0.962300f }	},
	{	{ 0.729411f, 0.763298f, 1.513870f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.775700f, 0.259200f, 0.575400f }	},
	{	{ 0.724573f, 0.761258f, 1.494709f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.982400f, 0.111600f, -0.150000f }	},
	{	{ 0.734145f, 0.755280f, 1.478171f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.617000f, -0.098000f, -0.780900f }	},
	{	{ 0.752525f, 0.748863f, 1.473946f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.115500f, -0.251700f, -0.960900f }	},
	{	{ 0.768945f, 0.745767f, 1.484505f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.784000f, -0.256500f, -0.565200f }	},
	{	{ 0.773783f, 0.747807f, 1.503666f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.981500f, -0.111800f, 0.155600f }	},
	{	{ 0.764211f, 0.753786f, 1.520205f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.620300f, 0.095600f, 0.778500f }	},
	{	{ 0.750533f, 0.797395f, 1.514745f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.091900f, 0.281900f, 0.955000f }	},
	{	{ 0.734045f, 0.799929f, 1.504335f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.777800f, 0.237900f, 0.581800f }	},
	{	{ 0.729156f, 0.797471f, 1.485285f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.989700f, 0.050600f, -0.134200f }	},
	{	{ 0.738724f, 0.791463f, 1.468754f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.627700f, -0.160800f, -0.761600f }	},
	{	{ 0.757150f, 0.785423f, 1.464430f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.110700f, -0.280000f, -0.953600f }	},
	{	{ 0.773637f, 0.782889f, 1.474840f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.790100f, -0.231900f, -0.567400f }	},
	{	{ 0.778526f, 0.785347f, 1.493890f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.988500f, -0.050600f, 0.142800f }	},
	{	{ 0.768958f, 0.791356f, 1.510421f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.631800f, 0.157400f, 0.759000f }	},
	{	{ 0.752258f, 0.828625f, 1.505088f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.075800f, 0.333300f, 0.939800f }	},
	{	{ 0.735730f, 0.830261f, 1.494964f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.777700f, 0.210600f, 0.592400f }	},
	{	{ 0.730810f, 0.827109f, 1.476133f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.993400f, -0.039800f, -0.107200f }	},
	{	{ 0.740375f, 0.821019f, 1.459629f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.637800f, -0.256600f, -0.726200f }	},
	{	{ 0.758826f, 0.815556f, 1.455122f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.105400f, -0.326100f, -0.939500f }	},
	{	{ 0.775354f, 0.813920f, 1.465246f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.797800f, -0.195600f, -0.570300f }	},
	{	{ 0.780273f, 0.817071f, 1.484076f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.991800f, 0.041400f, 0.120900f }	},
	{	{ 0.770709f, 0.823162f, 1.500580f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.643200f, 0.252200f, 0.723000f }	},
	{	{ 0.750781f, 0.853481f, 1.495292f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.049900f, 0.435400f, 0.898800f }	},
	{	{ 0.734400f, 0.853415f, 1.485875f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.771800f, 0.175900f, 0.611100f }	},
	{	{ 0.729596f, 0.848918f, 1.467605f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.981600f, -0.181200f, -0.059900f }	},
	{	{ 0.739178f, 0.842625f, 1.451185f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.639200f, -0.404500f, -0.654100f }	},
	{	{ 0.757538f, 0.838222f, 1.446237f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.100800f, -0.404400f, -0.909000f }	},
	{	{ 0.773919f, 0.838288f, 1.455653f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.806800f, -0.127100f, -0.576900f }	},
	{	{ 0.778723f, 0.842785f, 1.473923f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.976700f, 0.201200f, 0.074300f }	},
	{	{ 0.769141f, 0.849079f, 1.490343f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.644100f, 0.416200f, 0.641800f }	},
	{	{ 0.745168f, 0.872291f, 1.484373f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.046500f, 0.631200f, 0.774200f }	},
	{	{ 0.730332f, 0.868177f, 1.477581f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.753600f, 0.139800f, 0.642300f }	},
	{	{ 0.726770f, 0.860427f, 1.461420f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.959000f, -0.282100f, -0.028400f }	},
	{	{ 0.736563f, 0.853579f, 1.445360f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.693300f, -0.444900f, -0.567000f }	},
	{	{ 0.753980f, 0.851648f, 1.438809f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.123900f, -0.551700f, -0.824800f }	},
	{	{ 0.768816f, 0.855761f, 1.445600f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.791400f, 0.017200f, -0.611100f }	},
	{	{ 0.772378f, 0.863512f, 1.461761f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.879100f, 0.473900f, -0.051200f }	},
	{	{ 0.762584f, 0.870359f, 1.477822f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.575200f, 0.687400f, 0.443400f }	},
	{	{ 0.733443f, 0.883329f, 1.471447f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.148600f, 0.784500f, 0.602100f }	},
	{	{ 0.725320f, 0.873428f, 1.471597f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.659000f, 0.027500f, 0.751700f }	},
	{	{ 0.726772f, 0.861354f, 1.460622f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.685500f, -0.616900f, 0.386700f }	},
	{	{ 0.736946f, 0.854179f, 1.444954f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.166000f, -0.963900f, -0.208400f }	},
	{	{ 0.749883f, 0.856109f, 1.433772f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.246100f, -0.697100f, -0.673400f }	},
	{	{ 0.758007f, 0.866010f, 1.433621f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.681800f, 0.127800f, -0.720300f }	},
	{	{ 0.756554f, 0.878084f, 1.444596f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.620500f, 0.729200f, -0.288500f }	},
	{	{ 0.746381f, 0.885259f, 1.460264f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.348400f, 0.927400f, 0.136200f }	},
	{	{ 0.718094f, 0.886058f, 1.460589f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.260900f, 0.809200f, 0.526400f }	},
	{	{ 0.719096f, 0.874044f, 1.467214f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.465000f, -0.070300f, 0.882500f }	},
	{	{ 0.726528f, 0.860586f, 1.460483f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.004800f, -0.771600f, 0.636100f }	},
	{	{ 0.736036f, 0.853565f, 1.444342f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.163300f, -0.974800f, 0.151900f }	},
	{	{ 0.742048f, 0.857098f, 1.428245f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.340400f, -0.754600f, -0.560900f }	},
	{	{ 0.741046f, 0.869113f, 1.421620f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.503200f, 0.133800f, -0.853800f }	},
	{	{ 0.733613f, 0.882572f, 1.428352f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.316600f, 0.792200f, -0.521800f }	},
	{	{ 0.724106f, 0.889592f, 1.444493f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.068300f, 0.995300f, -0.069000f }	},
	{	{ 0.701048f, 0.884252f, 1.453021f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.340500f, 0.791900f, 0.507000f }	},
	{	{ 0.707676f, 0.872740f, 1.462296f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.326000f, -0.000400f, 0.945400f }	},
	{	{ 0.718425f, 0.859577f, 1.457127f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.077800f, -0.740500f, 0.667600f }	},
	{	{ 0.726998f, 0.852473f, 1.440547f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.161900f, -0.977800f, 0.133300f }	},
	{	{ 0.728371f, 0.855593f, 1.422264f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.371900f, -0.744600f, -0.554400f }	},
	{	{ 0.721743f, 0.867105f, 1.412988f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.340200f, 0.071000f, -0.937700f }	},
	{	{ 0.710995f, 0.880268f, 1.418157f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.077300f, 0.741200f, -0.666800f }	},
	{	{ 0.702421f, 0.887372f, 1.434738f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.158500f, 0.975500f, -0.152500f }	},
	{	{ 0.680778f, 0.877769f, 1.447300f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.419800f, 0.756100f, 0.502000f }	},
	{	{ 0.690852f, 0.867304f, 1.457614f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.235700f, 0.064400f, 0.969700f }	},
	{	{ 0.703863f, 0.854829f, 1.453126f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.097300f, -0.653100f, 0.751000f }	},
	{	{ 0.712190f, 0.847650f, 1.436471f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.338700f, -0.924400f, 0.175500f }	},
	{	{ 0.710953f, 0.849976f, 1.417403f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.429300f, -0.723500f, -0.540600f }	},
	{	{ 0.700879f, 0.860442f, 1.407090f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.235200f, -0.004600f, -0.971900f }	},
	{	{ 0.687868f, 0.872917f, 1.411578f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.106300f, 0.654700f, -0.748400f }	},
	{	{ 0.679541f, 0.880095f, 1.428232f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.344100f, 0.919300f, -0.191200f }	},
	{	{ 0.657672f, 0.865915f, 1.443367f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.489200f, 0.709900f, 0.506700f }	},
	{	{ 0.669793f, 0.856472f, 1.454055f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.184400f, 0.110400f, 0.976600f }	},
	{	{ 0.684276f, 0.844731f, 1.449836f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.230300f, -0.557900f, 0.797300f }	},
	{	{ 0.692638f, 0.837570f, 1.433188f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.483500f, -0.853000f, 0.196700f }	},
	{	{ 0.689977f, 0.839186f, 1.413859f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.488100f, -0.688300f, -0.536600f }	},
	{	{ 0.677857f, 0.848628f, 1.403171f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.175200f, -0.065000f, -0.982400f }	},
	{	{ 0.663374f, 0.860369f, 1.407390f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.240200f, 0.562100f, -0.791400f }	},
	{	{ 0.655011f, 0.867530f, 1.424038f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.490000f, 0.846600f, -0.207500f }	},
	{	{ 0.631935f, 0.847899f, 1.441174f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.546200f, 0.660600f, 0.515000f }	},
	{	{ 0.645330f, 0.839335f, 1.451981f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.155400f, 0.140200f, 0.977800f }	},
	{	{ 0.660802f, 0.828274f, 1.447855f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.326700f, -0.470300f, 0.819800f }	},
	{	{ 0.669287f, 0.821197f, 1.431219f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.597100f, -0.775500f, 0.205200f }	},
	{	{ 0.665811f, 0.822253f, 1.411814f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.540700f, -0.646400f, -0.538300f }	},
	{	{ 0.652416f, 0.830817f, 1.401006f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.142100f, -0.106900f, -0.984100f }	},
	{	{ 0.636944f, 0.841877f, 1.405132f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.336000f, 0.476300f, -0.812500f }	},
	{	{ 0.628459f, 0.848954f, 1.421769f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.602200f, 0.769600f, -0.212200f }	},
	{	{ 0.603770f, 0.822878f, 1.440729f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.592200f, 0.611900f, 0.524300f }	},
	{	{ 0.618005f, 0.815050f, 1.451555f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.138900f, 0.158900f, 0.977500f }	},
	{	{ 0.634168f, 0.804598f, 1.447444f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.396200f, -0.394300f, 0.829200f }	},
	{	{ 0.642793f, 0.797644f, 1.430810f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.684600f, -0.699100f, 0.206500f }	},
	{	{ 0.638823f, 0.798264f, 1.411395f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.585300f, -0.602500f, -0.542700f }	},
	{	{ 0.624588f, 0.806092f, 1.400568f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.124200f, -0.134500f, -0.983100f }	},
	{	{ 0.608425f, 0.816545f, 1.404680f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.405000f, 0.401000f, -0.821700f }	},
	{	{ 0.599800f, 0.823499f, 1.421313f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.688000f, 0.694400f, -0.210800f }	},
	{	{ 0.573407f, 0.789984f, 1.442069f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.629400f, 0.565200f, 0.533300f }	},
	{	{ 0.588220f, 0.782777f, 1.452873f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.129300f, 0.170100f, 0.976900f }	},
	{	{ 0.604885f, 0.772863f, 1.448742f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.446800f, -0.329800f, 0.831600f }	},
	{	{ 0.613642f, 0.766050f, 1.432103f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.751800f, -0.627200f, 0.203800f }	},
	{	{ 0.609356f, 0.766332f, 1.412700f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.622300f, -0.558900f, -0.548000f }	},
	{	{ 0.594542f, 0.773539f, 1.401896f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.114600f, -0.152300f, -0.981700f }	},
	{	{ 0.577877f, 0.783452f, 1.406027f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.455100f, 0.336200f, -0.824500f }	},
	{	{ 0.569120f, 0.790265f, 1.422665f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.753900f, 0.623700f, -0.206300f }	},
	{	{ 0.541091f, 0.748339f, 1.445247f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.659400f, 0.521500f, 0.541500f }	},
	{	{ 0.556318f, 0.741660f, 1.456011f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.123800f, 0.176400f, 0.976500f }	},
	{	{ 0.573357f, 0.732226f, 1.451845f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.484400f, -0.275100f, 0.830500f }	},
	{	{ 0.582230f, 0.725562f, 1.435195f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.803500f, -0.561100f, 0.199000f }	},
	{	{ 0.577734f, 0.725574f, 1.415812f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.652700f, -0.517200f, -0.553600f }	},
	{	{ 0.562507f, 0.732252f, 1.405048f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.109800f, -0.163400f, -0.980400f }	},
	{	{ 0.545468f, 0.741687f, 1.409213f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.492200f, 0.280800f, -0.823900f }	},
	{	{ 0.536595f, 0.748351f, 1.425863f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.804800f, 0.558700f, -0.200400f }	},
	{	{ 0.507084f, 0.697063f, 1.450321f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.683800f, 0.480800f, 0.548900f }	},
	{	{ 0.522614f, 0.690840f, 1.461041f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.120700f, 0.179500f, 0.976300f }	},
	{	{ 0.539939f, 0.681833f, 1.456834f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.512700f, -0.228500f, 0.827600f }	},
	{	{ 0.548911f, 0.675319f, 1.440170f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.843500f, -0.501200f, 0.193300f }	},
	{	{ 0.544270f, 0.675114f, 1.420807f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.677700f, -0.477900f, -0.558900f }	},
	{	{ 0.528740f, 0.681337f, 1.410087f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.107600f, -0.169900f, -0.979600f }	},
	{	{ 0.511415f, 0.690344f, 1.414295f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.520100f, 0.233500f, -0.821600f }	},
	{	{ 0.502443f, 0.696859f, 1.430959f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.844200f, 0.499700f, -0.193900f }	},
	{	{ 0.471651f, 0.635276f, 1.457356f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.703600f, 0.443300f, 0.555300f }	},
	{	{ 0.487410f, 0.629449f, 1.468031f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.119100f, 0.180400f, 0.976400f }	},
	{	{ 0.504956f, 0.620826f, 1.463780f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.534500f, -0.188700f, 0.823800f }	},
	{	{ 0.514012f, 0.614457f, 1.447100f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.874600f, -0.447100f, 0.187300f }	},
	{	{ 0.509269f, 0.614075f, 1.427757f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.698200f, -0.441300f, -0.563700f }	},
	{	{ 0.493510f, 0.619902f, 1.417082f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.107100f, -0.173300f, -0.979000f }	},
	{	{ 0.475964f, 0.628525f, 1.421332f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.541300f, 0.192900f, -0.818400f }	},
	{	{ 0.466908f, 0.634894f, 1.438013f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.875000f, 0.446400f, -0.187400f }	},
	{	{ 0.435067f, 0.562095f, 1.466415f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.719900f, 0.408800f, 0.560900f }	},
	{	{ 0.451001f, 0.556617f, 1.477047f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.118400f, 0.179900f, 0.976500f }	},
	{	{ 0.468720f, 0.548339f, 1.472754f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.551500f, -0.154300f, 0.819800f }	},
	{	{ 0.477847f, 0.542111f, 1.456056f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.899000f, -0.398600f, 0.181300f }	},
	{	{ 0.473030f, 0.541582f, 1.436732f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.715000f, -0.407400f, -0.568100f }	},
	{	{ 0.457096f, 0.547060f, 1.426100f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.107400f, -0.174600f, -0.978800f }	},
	{	{ 0.439377f, 0.555338f, 1.430393f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.557800f, 0.157800f, -0.814800f }	},
	{	{ 0.430251f, 0.561567f, 1.447091f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.899200f, 0.398300f, -0.181100f }	},
	{	{ 0.397606f, 0.476638f, 1.477567f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.727400f, 0.392300f, 0.563000f }	},
	{	{ 0.413677f, 0.471471f, 1.488158f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.118000f, 0.179200f, 0.976700f }	},
	{	{ 0.431535f, 0.463509f, 1.483824f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.559500f, -0.138700f, 0.817100f }	},
	{	{ 0.440721f, 0.457415f, 1.467108f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.909700f, -0.375600f, 0.177300f }	},
	{	{ 0.435849f, 0.456761f, 1.447800f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.722200f, -0.391000f, -0.570500f }	},
	{	{ 0.419778f, 0.461927f, 1.437209f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.107900f, -0.175000f, -0.978600f }	},
	{	{ 0.401920f, 0.469890f, 1.441543f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.564200f, 0.141200f, -0.813500f }	},
	{	{ 0.392734f, 0.475984f, 1.458258f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.909400f, 0.375300f, -0.179100f }	},
};
#define _Cable_Thick_vertices_
#endif
#ifndef _Cable_Thick_indices_
// Index Data follows: Sequential by mesh, Every Three Indices == One Triangle.
const unsigned int Cable_Thick_indices[1152] =
{
	 0, 1, 2,
	 3, 0, 2,
	 3, 2, 4,
	 5, 3, 4,
	 5, 4, 6,
	 7, 5, 6,
	 7, 6, 8,
	 9, 7, 8,
	 9, 8, 10,
	 11, 9, 10,
	 11, 10, 12,
	 13, 11, 12,
	 13, 12, 14,
	 15, 13, 14,
	 15, 14, 1,
	 0, 15, 1,
	 1, 16, 17,
	 2, 1, 17,
	 2, 17, 18,
	 4, 2, 18,
	 4, 18, 19,
	 6, 4, 19,
	 6, 19, 20,
	 8, 6, 20,
	 8, 20, 21,
	 10, 8, 21,
	 10, 21, 22,
	 12, 10, 22,
	 12, 22, 23,
	 14, 12, 23,
	 14, 23, 16,
	 1, 14, 16,
	 16, 24, 25,
	 17, 16, 25,
	 17, 25, 26,
	 18, 17, 26,
	 18, 26, 27,
	 19, 18, 27,
	 19, 27, 28,
	 20, 19, 28,
	 20, 28, 29,
	 21, 20, 29,
	 21, 29, 30,
	 22, 21, 30,
	 22, 30, 31,
	 23, 22, 31,
	 23, 31, 24,
	 16, 23, 24,
	 24, 32, 33,
	 25, 24, 33,
	 25, 33, 34,
	 26, 25, 34,
	 26, 34, 35,
	 27, 26, 35,
	 27, 35, 36,
	 28, 27, 36,
	 28, 36, 37,
	 29, 28, 37,
	 29, 37, 38,
	 30, 29, 38,
	 30, 38, 39,
	 31, 30, 39,
	 31, 39, 32,
	 24, 31, 32,
	 32, 40, 41,
	 33, 32, 41,
	 33, 41, 42,
	 34, 33, 42,
	 34, 42, 43,
	 35, 34, 43,
	 35, 43, 44,
	 36, 35, 44,
	 36, 44, 45,
	 37, 36, 45,
	 37, 45, 46,
	 38, 37, 46,
	 38, 46, 47,
	 39, 38, 47,
	 39, 47, 40,
	 32, 39, 40,
	 40, 48, 49,
	 41, 40, 49,
	 41, 49, 50,
	 42, 41, 50,
	 42, 50, 51,
	 43, 42, 51,
	 43, 51, 52,
	 44, 43, 52,
	 44, 52, 53,
	 45, 44, 53,
	 45, 53, 54,
	 46, 45, 54,
	 46, 54, 55,
	 47, 46, 55,
	 47, 55, 48,
	 40, 47, 48,
	 48, 56, 57,
	 49, 48, 57,
	 49, 57, 58,
	 50, 49, 58,
	 50, 58, 59,
	 51, 50, 59,
	 51, 59, 60,
	 52, 51, 60,
	 52, 60, 61,
	 53, 52, 61,
	 61, 62, 54,
	 53, 61, 54,
	 54, 62, 63,
	 55, 54, 63,
	 55, 63, 56,
	 48, 55, 56,
	 56, 64, 65,
	 57, 56, 65,
	 57, 65, 66,
	 58, 57, 66,
	 58, 66, 67,
	 59, 58, 67,
	 59, 67, 68,
	 60, 59, 68,
	 60, 68, 69,
	 61, 60, 69,
	 61, 69, 70,
	 62, 61, 70,
	 62, 70, 71,
	 63, 62, 71,
	 63, 71, 64,
	 56, 63, 64,
	 64, 72, 73,
	 65, 64, 73,
	 65, 73, 74,
	 66, 65, 74,
	 66, 74, 75,
	 67, 66, 75,
	 67, 75, 76,
	 68, 67, 76,
	 68, 76, 77,
	 69, 68, 77,
	 69, 77, 78,
	 70, 69, 78,
	 78, 79, 71,
	 70, 78, 71,
	 71, 79, 72,
	 64, 71, 72,
	 72, 80, 81,
	 73, 72, 81,
	 73, 81, 82,
	 74, 73, 82,
	 74, 82, 83,
	 75, 74, 83,
	 75, 83, 84,
	 76, 75, 84,
	 76, 84, 85,
	 77, 76, 85,
	 77, 85, 86,
	 78, 77, 86,
	 78, 86, 87,
	 79, 78, 87,
	 79, 87, 80,
	 72, 79, 80,
	 80, 88, 89,
	 81, 80, 89,
	 81, 89, 90,
	 82, 81, 90,
	 82, 90, 91,
	 83, 82, 91,
	 83, 91, 92,
	 84, 83, 92,
	 84, 92, 93,
	 85, 84, 93,
	 85, 93, 94,
	 86, 85, 94,
	 86, 94, 95,
	 87, 86, 95,
	 87, 95, 88,
	 80, 87, 88,
	 88, 96, 97,
	 89, 88, 97,
	 89, 97, 98,
	 90, 89, 98,
	 90, 98, 99,
	 91, 90, 99,
	 91, 99, 100,
	 92, 91, 100,
	 92, 100, 101,
	 93, 92, 101,
	 93, 101, 102,
	 94, 93, 102,
	 94, 102, 103,
	 95, 94, 103,
	 95, 103, 96,
	 88, 95, 96,
	 96, 104, 105,
	 97, 96, 105,
	 97, 105, 106,
	 98, 97, 106,
	 98, 106, 107,
	 99, 98, 107,
	 99, 107, 108,
	 100, 99, 108,
	 100, 108, 109,
	 101, 100, 109,
	 101, 109, 110,
	 102, 101, 110,
	 102, 110, 111,
	 103, 102, 111,
	 103, 111, 104,
	 96, 103, 104,
	 104, 112, 113,
	 105, 104, 113,
	 105, 113, 114,
	 106, 105, 114,
	 106, 114, 115,
	 107, 106, 115,
	 107, 115, 116,
	 108, 107, 116,
	 108, 116, 117,
	 109, 108, 117,
	 109, 117, 118,
	 110, 109, 118,
	 110, 118, 119,
	 111, 110, 119,
	 111, 119, 112,
	 104, 111, 112,
	 112, 120, 121,
	 113, 112, 121,
	 113, 121, 122,
	 114, 113, 122,
	 114, 122, 123,
	 115, 114, 123,
	 115, 123, 124,
	 116, 115, 124,
	 116, 124, 125,
	 117, 116, 125,
	 117, 125, 126,
	 118, 117, 126,
	 118, 126, 127,
	 119, 118, 127,
	 119, 127, 120,
	 112, 119, 120,
	 120, 128, 129,
	 121, 120, 129,
	 121, 129, 130,
	 122, 121, 130,
	 122, 130, 131,
	 123, 122, 131,
	 123, 131, 132,
	 124, 123, 132,
	 124, 132, 133,
	 125, 124, 133,
	 125, 133, 134,
	 126, 125, 134,
	 126, 134, 135,
	 127, 126, 135,
	 127, 135, 128,
	 120, 127, 128,
	 128, 136, 137,
	 129, 128, 137,
	 129, 137, 138,
	 130, 129, 138,
	 130, 138, 139,
	 131, 130, 139,
	 131, 139, 140,
	 132, 131, 140,
	 132, 140, 141,
	 133, 132, 141,
	 133, 141, 142,
	 134, 133, 142,
	 134, 142, 143,
	 135, 134, 143,
	 135, 143, 136,
	 128, 135, 136,
	 136, 144, 145,
	 137, 136, 145,
	 137, 145, 146,
	 138, 137, 146,
	 138, 146, 147,
	 139, 138, 147,
	 139, 147, 148,
	 140, 139, 148,
	 140, 148, 149,
	 141, 140, 149,
	 141, 149, 150,
	 142, 141, 150,
	 142, 150, 151,
	 143, 142, 151,
	 143, 151, 144,
	 136, 143, 144,
	 144, 152, 153,
	 145, 144, 153,
	 145, 153, 154,
	 146, 145, 154,
	 146, 154, 155,
	 147, 146, 155,
	 147, 155, 156,
	 148, 147, 156,
	 148, 156, 157,
	 149, 148, 157,
	 149, 157, 158,
	 150, 149, 158,
	 150, 158, 159,
	 151, 150, 159,
	 151, 159, 152,
	 144, 151, 152,
	 152, 160, 161,
	 153, 152, 161,
	 153, 161, 162,
	 154, 153, 162,
	 154, 162, 163,
	 155, 154, 163,
	 155, 163, 164,
	 156, 155, 164,
	 156, 164, 165,
	 157, 156, 165,
	 157, 165, 166,
	 158, 157, 166,
	 158, 166, 167,
	 159, 158, 167,
	 159, 167, 160,
	 152, 159, 160,
	 160, 168, 169,
	 161, 160, 169,
	 161, 169, 170,
	 162, 161, 170,
	 162, 170, 171,
	 163, 162, 171,
	 163, 171, 172,
	 164, 163, 172,
	 164, 172, 173,
	 165, 164, 173,
	 165, 173, 174,
	 166, 165, 174,
	 166, 174, 175,
	 167, 166, 175,
	 167, 175, 168,
	 160, 167, 168,
	 168, 176, 177,
	 169, 168, 177,
	 169, 177, 178,
	 170, 169, 178,
	 170, 178, 179,
	 171, 170, 179,
	 171, 179, 180,
	 172, 171, 180,
	 172, 180, 181,
	 173, 172, 181,
	 173, 181, 182,
	 174, 173, 182,
	 174, 182, 183,
	 175, 174, 183,
	 175, 183, 176,
	 168, 175, 176,
	 176, 184, 185,
	 177, 176, 185,
	 177, 185, 186,
	 178, 177, 186,
	 178, 186, 187,
	 179, 178, 187,
	 179, 187, 188,
	 180, 179, 188,
	 180, 188, 189,
	 181, 180, 189,
	 181, 189, 190,
	 182, 181, 190,
	 190, 191, 183,
	 182, 190, 183,
	 183, 191, 184,
	 176, 183, 184,
	 184, 192, 193,
	 185, 184, 193,
	 185, 193, 194,
	 186, 185, 194,
	 186, 194, 195,
	 187, 186, 195,
	 187, 195, 196,
	 188, 187, 196,
	 188, 196, 197,
	 189, 188, 197,
	 189, 197, 198,
	 190, 189, 198,
	 190, 198, 199,
	 191, 190, 199,
	 191, 199, 192,
	 184, 191, 192,
};
#define _Cable_Thick_indices_
#endif
// Part of an OBJ_MATERIAL, the struct is 16 byte aligned so it is GPU register friendly.
#ifndef __OBJ_ATTRIBUTES__
typedef struct _OBJ_ATTRIBUTES_
{
	OBJ_VEC3    Kd; // diffuse reflectivity
	float	    d; // dissolve (transparency) 
	OBJ_VEC3    Ks; // specular reflectivity
	float       Ns; // specular exponent
	OBJ_VEC3    Ka; // ambient reflectivity
	float       sharpness; // local reflection map sharpness
	OBJ_VEC3    Tf; // transmission filter
	float       Ni; // optical density (index of refraction)
	OBJ_VEC3    Ke; // emissive reflectivity
	unsigned    illum; // illumination model
}OBJ_ATTRIBUTES;
#define __OBJ_ATTRIBUTES__
#endif
// This structure also has been made GPU register friendly so it can be transfered directly if desired.
// Note: Total struct size will vary depenedening on CPU processor architecture (string pointers).
#ifndef __OBJ_MATERIAL__
typedef struct _OBJ_MATERIAL_
{
	// The following items are typically used in a pixel/fragment shader, they are packed for GPU registers.
	OBJ_ATTRIBUTES attrib; // Surface shading characteristics & illumination model
	// All items below this line are not needed on the GPU and are generally only used during load time.
	const char* name; // the name of this material
	// If the model's materials contain any specific texture data it will be located below.
	const char* map_Kd; // diffuse texture
	const char* map_Ks; // specular texture
	const char* map_Ka; // ambient texture
	const char* map_Ke; // emissive texture
	const char* map_Ns; // specular exponent texture
	const char* map_d; // transparency texture
	const char* disp; // roughness map (displacement)
	const char* decal; // decal texture (lerps texture & material colors)
	const char* bump; // normal/bumpmap texture
	void* padding[2]; // 16 byte alignment on 32bit or 64bit
}OBJ_MATERIAL;
#define __OBJ_MATERIAL__
#endif
#ifndef _Cable_Thick_materials_
// Material Data follows: pulled from a .mtl file of the same name if present.
const OBJ_MATERIAL Cable_Thick_materials[1] =
{
	{
		{{ 0.004256f, 0.012410f, 0.090833f },
		1.000000f,
		{ 0.500000f, 0.500000f, 0.500000f },
		250.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.450000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"Black.004",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
};
#define _Cable_Thick_materials_
#endif
/************************************************/
/*  This section contains the model's structure */
/************************************************/
#ifndef _Cable_Thick_batches_
// Use this conveinence array to batch render all geometry by like material.
// Each entry corresponds to the same entry in the materials array above.
// The two numbers provided are the IndexCount and the IndexOffset into the indices array.
// If you need more fine grained control(ex: for transformations) use the OBJ_MESH data below.
const unsigned int Cable_Thick_batches[1][2] =
{
	{ 1152, 0 },
};
#define _Cable_Thick_batches_
#endif
#ifndef __OBJ_MESH__
typedef struct _OBJ_MESH_
{
	const char* name;
	unsigned    indexCount;
	unsigned    indexOffset;
	unsigned    materialIndex;
}OBJ_MESH;
#define __OBJ_MESH__
#endif
#ifndef _Cable_Thick_meshes_
// Mesh Data follows: Meshes are .obj groups sorted & split by material.
// Meshes are provided in sequential order, sorted by material first and name second.
const OBJ_MESH Cable_Thick_meshes[1] =
{
	{
		"default",
		1152,
		0,
		0,
	},
};
#define _Cable_Thick_meshes_
#endif
